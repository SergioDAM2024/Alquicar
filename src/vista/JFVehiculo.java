package vista;

import bean.Vehiculo;
import java.awt.Image;
import java.awt.Toolkit;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.DefaultEditorKit;
import modelo.ArregloVehiculo;

public class JFVehiculo extends javax.swing.JFrame {

    ArregloVehiculo listaVehi = new ArregloVehiculo();
    DefaultTableModel modelo;
    /* Manejo de Archivos */
    JFileChooser elegir = new JFileChooser(".");
    FileInputStream entrada = null;
    File archivoR, archivoM, archivoDef = new File("./src/img/notfound.png");
    byte[] imagenVehiR = null, imagenVehiM = null;

    public JFVehiculo() {
        initComponents();
        this.setLocationRelativeTo(null);
        modelo = (DefaultTableModel) tblListaVehi.getModel();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jtpCRUDVehi = new javax.swing.JTabbedPane();
        jpRVehi = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtCodigoR = new javax.swing.JTextField();
        txtPlacaR = new javax.swing.JTextField();
        txtMarcaR = new javax.swing.JTextField();
        btnRegistrar = new javax.swing.JButton();
        btnLimpiarR = new javax.swing.JButton();
        txtCostoR = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        spiAsientR = new javax.swing.JSpinner();
        cboEstadoR = new javax.swing.JComboBox<>();
        jLabel18 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        cboTransmiR = new javax.swing.JComboBox<>();
        cboCombusR = new javax.swing.JComboBox<>();
        cboCategoriaR = new javax.swing.JComboBox<>();
        jLabel19 = new javax.swing.JLabel();
        btnSubirImagenR = new javax.swing.JButton();
        lblVehiR = new javax.swing.JLabel();
        txtModeloR = new javax.swing.JTextField();
        jpCVehi = new javax.swing.JPanel();
        btnListar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblListaVehi = new javax.swing.JTable();
        btnVerVehi = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        txtFilMarca = new javax.swing.JTextField();
        jpMVehi = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        txtCodigoM = new javax.swing.JTextField();
        btnBuscarM = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        btnLimpiarM = new javax.swing.JButton();
        jLabel13 = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        txtPlacaM = new javax.swing.JTextField();
        txtMarcaM = new javax.swing.JTextField();
        txtCostoM = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        spiAsientM = new javax.swing.JSpinner();
        cboEstadoM = new javax.swing.JComboBox<>();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        cboTransmiM = new javax.swing.JComboBox<>();
        cboCombusM = new javax.swing.JComboBox<>();
        cboCategoriaM = new javax.swing.JComboBox<>();
        jLabel23 = new javax.swing.JLabel();
        btnCambiarImagenM = new javax.swing.JButton();
        lblVehiM = new javax.swing.JLabel();
        btnActualizar = new javax.swing.JButton();
        txtModeloM = new javax.swing.JTextField();
        jpEVehi = new javax.swing.JPanel();
        jLabel10 = new javax.swing.JLabel();
        txtCodigoE = new javax.swing.JTextField();
        btnBuscarE = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 204, 51));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 30)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("MANTENIMIENTO DE VEHÍCULOS");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, 860, 35));

        jtpCRUDVehi.setBackground(new java.awt.Color(255, 204, 102));
        jtpCRUDVehi.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jtpCRUDVehi.setMinimumSize(new java.awt.Dimension(860, 500));
        jtpCRUDVehi.setPreferredSize(new java.awt.Dimension(860, 500));

        jpRVehi.setBackground(new java.awt.Color(255, 255, 255));
        jpRVehi.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jpRVehi.setMaximumSize(new java.awt.Dimension(860, 460));
        jpRVehi.setMinimumSize(new java.awt.Dimension(860, 460));
        jpRVehi.setPreferredSize(new java.awt.Dimension(800, 460));
        jpRVehi.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel2.setText("CÓDIGO:");
        jpRVehi.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 30, 180, 25));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel3.setText("COMBUSTIBLE:");
        jpRVehi.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 230, 180, 25));

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel4.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel4.setText("MARCA:");
        jpRVehi.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 70, 180, 25));

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel5.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel5.setText("N° ASIENTOS:");
        jpRVehi.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 270, 180, 25));

        txtCodigoR.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtCodigoR.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCodigoRKeyTyped(evt);
            }
        });
        jpRVehi.add(txtCodigoR, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 30, 150, 25));

        txtPlacaR.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtPlacaR.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPlacaRKeyTyped(evt);
            }
        });
        jpRVehi.add(txtPlacaR, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 150, 220, 25));

        txtMarcaR.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jpRVehi.add(txtMarcaR, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 70, 220, 25));

        btnRegistrar.setBackground(new java.awt.Color(0, 204, 0));
        btnRegistrar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnRegistrar.setForeground(new java.awt.Color(255, 255, 255));
        btnRegistrar.setText("GUARDAR");
        btnRegistrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRegistrarActionPerformed(evt);
            }
        });
        jpRVehi.add(btnRegistrar, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 410, 200, 40));

        btnLimpiarR.setBackground(new java.awt.Color(255, 255, 0));
        btnLimpiarR.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnLimpiarR.setText("LIMPIAR");
        btnLimpiarR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarRActionPerformed(evt);
            }
        });
        jpRVehi.add(btnLimpiarR, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 410, 200, 40));

        txtCostoR.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtCostoR.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCostoRKeyTyped(evt);
            }
        });
        jpRVehi.add(txtCostoR, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 350, 120, 25));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel11.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel11.setText("COSTO POR DÍA (S/):");
        jpRVehi.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 350, 180, 25));

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel12.setText("ESTADO:");
        jpRVehi.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 350, 80, 25));

        spiAsientR.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jpRVehi.add(spiAsientR, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 270, 60, 25));

        cboEstadoR.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cboEstadoR.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-Selecciona-", "Disponible", "Alquilado", "En reparación" }));
        jpRVehi.add(cboEstadoR, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 350, 200, 25));

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel18.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel18.setText("PLACA:");
        jpRVehi.add(jLabel18, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 150, 180, 25));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel8.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel8.setText("CATEGORÍA:");
        jpRVehi.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 310, 180, 25));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel9.setText("TRANSMISIÓN:");
        jpRVehi.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 190, 180, 25));

        cboTransmiR.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cboTransmiR.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-Selecciona-", "Automática", "Manual" }));
        jpRVehi.add(cboTransmiR, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 190, 220, 25));

        cboCombusR.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cboCombusR.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-Selecciona-", "Diésel", "Gasolina", "Gas/GLP", "Electricidad" }));
        jpRVehi.add(cboCombusR, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 230, 220, 25));

        cboCategoriaR.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cboCategoriaR.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-Selecciona-", "Compacto", "Moto Lineal", "Camioneta", "Deportivo", "Familiar", "SUV", "Lujoso", "Van" }));
        jpRVehi.add(cboCategoriaR, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 310, 220, 25));

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel19.setText("MODELO:");
        jpRVehi.add(jLabel19, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 110, 180, 25));

        btnSubirImagenR.setBackground(new java.awt.Color(255, 204, 51));
        btnSubirImagenR.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnSubirImagenR.setText("SUBIR IMAGEN:");
        btnSubirImagenR.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubirImagenRActionPerformed(evt);
            }
        });
        jpRVehi.add(btnSubirImagenR, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 240, 300, 35));

        lblVehiR.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 204, 51)));
        jpRVehi.add(lblVehiR, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 30, 300, 200));

        txtModeloR.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jpRVehi.add(txtModeloR, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 110, 220, 25));

        jtpCRUDVehi.addTab("REGISTRAR", jpRVehi);

        jpCVehi.setBackground(new java.awt.Color(255, 255, 255));
        jpCVehi.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jpCVehi.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnListar.setBackground(new java.awt.Color(255, 255, 255));
        btnListar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnListar.setText("LISTAR");
        btnListar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnListarActionPerformed(evt);
            }
        });
        jpCVehi.add(btnListar, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 15, 150, 40));

        tblListaVehi.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        tblListaVehi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "CÓDIGO", "MARCA", "MODELO", "CATEGORÍA", "TRANSMISIÓN", "COMBUSTIBLE", "N° ASIENTOS.", "A/C", "COSTO(S/)", "ESTADO"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, true, true, true, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblListaVehi.setGridColor(new java.awt.Color(255, 255, 255));
        tblListaVehi.setSelectionBackground(new java.awt.Color(255, 153, 0));
        tblListaVehi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblListaVehiMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblListaVehi);

        jpCVehi.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 70, 840, 390));

        btnVerVehi.setBackground(new java.awt.Color(51, 51, 51));
        btnVerVehi.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnVerVehi.setForeground(new java.awt.Color(255, 255, 255));
        btnVerVehi.setText("VER IMAGEN");
        btnVerVehi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVerVehiActionPerformed(evt);
            }
        });
        jpCVehi.add(btnVerVehi, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 15, 160, 40));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel7.setText("FILTRAR POR MARCA:");
        jpCVehi.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 25, 200, 25));

        txtFilMarca.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jpCVehi.add(txtFilMarca, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 25, 200, 25));

        jtpCRUDVehi.addTab("CONSULTAR", jpCVehi);

        jpMVehi.setBackground(new java.awt.Color(255, 255, 255));
        jpMVehi.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jpMVehi.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel6.setText("INGRESAR EL CÓDIGO DEL VEHÍCULO:");
        jpMVehi.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 25, 290, 25));

        txtCodigoM.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jpMVehi.add(txtCodigoM, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 25, 200, 25));

        btnBuscarM.setBackground(new java.awt.Color(51, 51, 51));
        btnBuscarM.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnBuscarM.setForeground(new java.awt.Color(255, 255, 255));
        btnBuscarM.setText("BUSCAR");
        btnBuscarM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarMActionPerformed(evt);
            }
        });
        jpMVehi.add(btnBuscarM, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 15, 150, 40));
        jpMVehi.add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 70, 790, 10));

        btnLimpiarM.setBackground(new java.awt.Color(255, 255, 0));
        btnLimpiarM.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnLimpiarM.setText("LIMPIAR");
        btnLimpiarM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimpiarMActionPerformed(evt);
            }
        });
        jpMVehi.add(btnLimpiarM, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 420, 200, 40));

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel13.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel13.setText("COMBUSTIBLE:");
        jpMVehi.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 250, 180, 25));

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel14.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel14.setText("MARCA:");
        jpMVehi.add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 90, 180, 25));

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel15.setText("N° ASIENTOS:");
        jpMVehi.add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 290, 180, 25));

        txtPlacaM.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtPlacaM.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtPlacaMKeyTyped(evt);
            }
        });
        jpMVehi.add(txtPlacaM, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 170, 220, 25));

        txtMarcaM.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jpMVehi.add(txtMarcaM, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 90, 220, 25));

        txtCostoM.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        txtCostoM.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtCostoMKeyTyped(evt);
            }
        });
        jpMVehi.add(txtCostoM, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 370, 120, 25));

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel16.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel16.setText("COSTO POR DÍA (S/):");
        jpMVehi.add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 370, 180, 25));

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel17.setText("ESTADO:");
        jpMVehi.add(jLabel17, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 370, 80, 25));

        spiAsientM.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jpMVehi.add(spiAsientM, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 290, 60, 25));

        cboEstadoM.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cboEstadoM.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-Selecciona-", "Disponible", "Alquilado", "En reparación" }));
        jpMVehi.add(cboEstadoM, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 370, 200, 25));

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel20.setText("PLACA:");
        jpMVehi.add(jLabel20, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 170, 180, 25));

        jLabel21.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel21.setText("CATEGORÍA:");
        jpMVehi.add(jLabel21, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 330, 180, 25));

        jLabel22.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel22.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel22.setText("TRANSMISIÓN:");
        jpMVehi.add(jLabel22, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 210, 180, 25));

        cboTransmiM.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cboTransmiM.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-Selecciona-", "Automática", "Manual" }));
        jpMVehi.add(cboTransmiM, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 210, 200, 25));

        cboCombusM.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cboCombusM.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-Selecciona-", "Diésel", "Gasolina", "Gas/GLP", "Electricidad" }));
        jpMVehi.add(cboCombusM, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 250, 200, 25));

        cboCategoriaM.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        cboCategoriaM.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-Selecciona-", "Compacto", "Moto Lineal", "Camioneta", "Deportivo", "Familiar", "SUV", "Lujoso", "Van" }));
        jpMVehi.add(cboCategoriaM, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 330, 200, 25));

        jLabel23.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel23.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel23.setText("MODELO:");
        jpMVehi.add(jLabel23, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 130, 180, 25));

        btnCambiarImagenM.setBackground(new java.awt.Color(255, 204, 51));
        btnCambiarImagenM.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnCambiarImagenM.setText("CAMBIAR IMAGEN:");
        btnCambiarImagenM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCambiarImagenMActionPerformed(evt);
            }
        });
        jpMVehi.add(btnCambiarImagenM, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 300, 300, 35));

        lblVehiM.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 204, 51)));
        jpMVehi.add(lblVehiM, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 90, 300, 200));

        btnActualizar.setBackground(new java.awt.Color(0, 204, 0));
        btnActualizar.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnActualizar.setForeground(new java.awt.Color(255, 255, 255));
        btnActualizar.setText("ACTUALIZAR");
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });
        jpMVehi.add(btnActualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 420, 200, 40));

        txtModeloM.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jpMVehi.add(txtModeloM, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 130, 220, 25));

        jtpCRUDVehi.addTab("MODIFICAR", jpMVehi);

        jpEVehi.setBackground(new java.awt.Color(255, 255, 255));
        jpEVehi.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jpEVehi.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.RIGHT);
        jLabel10.setText("INGRESAR EL CÓDIGO DEL VEHÍCULO:");
        jpEVehi.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 70, 320, 30));

        txtCodigoE.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jpEVehi.add(txtCodigoE, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 70, 240, 30));

        btnBuscarE.setBackground(new java.awt.Color(255, 0, 0));
        btnBuscarE.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        btnBuscarE.setForeground(new java.awt.Color(255, 255, 255));
        btnBuscarE.setText("ELIMINAR");
        btnBuscarE.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBuscarEActionPerformed(evt);
            }
        });
        jpEVehi.add(btnBuscarE, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 120, 290, 40));

        jtpCRUDVehi.addTab("ELIMINAR", jpEVehi);

        jPanel1.add(jtpCRUDVehi, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, 100, 900, 520));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRegistrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRegistrarActionPerformed
        guardar();
    }//GEN-LAST:event_btnRegistrarActionPerformed

    private void btnLimpiarRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarRActionPerformed
        limpiarR();
    }//GEN-LAST:event_btnLimpiarRActionPerformed

    private void btnListarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnListarActionPerformed
        listar();
    }//GEN-LAST:event_btnListarActionPerformed

    private void btnBuscarMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarMActionPerformed
        buscar();
    }//GEN-LAST:event_btnBuscarMActionPerformed

    private void btnLimpiarMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimpiarMActionPerformed
        limpiarM();
    }//GEN-LAST:event_btnLimpiarMActionPerformed

    private void btnBuscarEActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBuscarEActionPerformed
        eliminar();
    }//GEN-LAST:event_btnBuscarEActionPerformed

    private void btnSubirImagenRActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubirImagenRActionPerformed
        subirImagen();
    }//GEN-LAST:event_btnSubirImagenRActionPerformed

    private void btnCambiarImagenMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCambiarImagenMActionPerformed
        cambiarImagen();
    }//GEN-LAST:event_btnCambiarImagenMActionPerformed

    private void btnVerVehiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVerVehiActionPerformed
        verVehiculo();
    }//GEN-LAST:event_btnVerVehiActionPerformed

    private void txtCostoRKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCostoRKeyTyped
        Character c = evt.getKeyChar();
        if (Character.isDigit(c) || c.equals('.')) {
            if (c.equals('.')) {
                if (txtCostoR.getText().contains(".")) {
                    evt.consume();
                    Toolkit.getDefaultToolkit().beep();
                }
            }
        } else {
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
        }
    }//GEN-LAST:event_txtCostoRKeyTyped

    private void txtCodigoRKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCodigoRKeyTyped
        char c = evt.getKeyChar();
        if (Character.isDigit(c)) {

        } else {
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
        }

    }//GEN-LAST:event_txtCodigoRKeyTyped

    private void txtCostoMKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCostoMKeyTyped
        Character c = evt.getKeyChar();
        if (Character.isDigit(c) || c.equals('.')) {
            if (c.equals('.')) {
                if (txtCostoM.getText().contains(".")) {
                    evt.consume();
                    Toolkit.getDefaultToolkit().beep();
                }
            }
        } else {
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
        }
    }//GEN-LAST:event_txtCostoMKeyTyped

    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        actualizar();
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void txtPlacaRKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPlacaRKeyTyped
        Character c = evt.getKeyChar();
        if (Character.isDigit(c) || Character.isAlphabetic(c) || c.equals('-')) {
            if (c.equals('-')) {
                if (txtPlacaR.getText().contains("-") ) {
                    evt.consume();
                    Toolkit.getDefaultToolkit().beep();
                }
            }
        } else {
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
        }
    }//GEN-LAST:event_txtPlacaRKeyTyped

    private void txtPlacaMKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPlacaMKeyTyped
        Character c = evt.getKeyChar();
        if (Character.isDigit(c) || Character.isAlphabetic(c) || c.equals('-')) {
            if (c.equals('-')) {
                if (txtPlacaM.getText().contains("-")) {
                    evt.consume();
                    Toolkit.getDefaultToolkit().beep();
                }
            }
        } else {
            evt.consume();
            Toolkit.getDefaultToolkit().beep();
        }
    }//GEN-LAST:event_txtPlacaMKeyTyped

    private void tblListaVehiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblListaVehiMouseClicked
        enviarVehiculo();
    }//GEN-LAST:event_tblListaVehiMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFVehiculo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFVehiculo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFVehiculo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFVehiculo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFVehiculo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnBuscarE;
    private javax.swing.JButton btnBuscarM;
    private javax.swing.JButton btnCambiarImagenM;
    private javax.swing.JButton btnLimpiarM;
    private javax.swing.JButton btnLimpiarR;
    private javax.swing.JButton btnListar;
    private javax.swing.JButton btnRegistrar;
    private javax.swing.JButton btnSubirImagenR;
    private javax.swing.JButton btnVerVehi;
    private javax.swing.JComboBox<String> cboCategoriaM;
    private javax.swing.JComboBox<String> cboCategoriaR;
    private javax.swing.JComboBox<String> cboCombusM;
    private javax.swing.JComboBox<String> cboCombusR;
    private javax.swing.JComboBox<String> cboEstadoM;
    private javax.swing.JComboBox<String> cboEstadoR;
    private javax.swing.JComboBox<String> cboTransmiM;
    private javax.swing.JComboBox<String> cboTransmiR;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JPanel jpCVehi;
    private javax.swing.JPanel jpEVehi;
    private javax.swing.JPanel jpMVehi;
    private javax.swing.JPanel jpRVehi;
    public static javax.swing.JTabbedPane jtpCRUDVehi;
    private javax.swing.JLabel lblVehiM;
    private javax.swing.JLabel lblVehiR;
    private javax.swing.JSpinner spiAsientM;
    private javax.swing.JSpinner spiAsientR;
    private javax.swing.JTable tblListaVehi;
    private javax.swing.JTextField txtCodigoE;
    private javax.swing.JTextField txtCodigoM;
    private javax.swing.JTextField txtCodigoR;
    private javax.swing.JTextField txtCostoM;
    private javax.swing.JTextField txtCostoR;
    private javax.swing.JTextField txtFilMarca;
    private javax.swing.JTextField txtMarcaM;
    private javax.swing.JTextField txtMarcaR;
    private javax.swing.JTextField txtModeloM;
    private javax.swing.JTextField txtModeloR;
    private javax.swing.JTextField txtPlacaM;
    private javax.swing.JTextField txtPlacaR;
    // End of variables declaration//GEN-END:variables
/**
     * ************** REGISTRAR *************
     */
    private void guardar() {

        boolean validar = txtCodigoR.getText().equals("") || txtMarcaR.getText().equals("")
                || txtPlacaR.getText().equals("") || cboCategoriaR.getSelectedIndex() <= 0
                || cboTransmiR.getSelectedIndex() <= 0 || cboCombusR.getSelectedIndex() <= 0
                || (int) spiAsientR.getValue() <= 0 || txtCostoR.getText().equals("")
                || Integer.parseInt(txtCostoR.getText()) <= 0 || cboEstadoR.getSelectedIndex() <= 0;

        if (!validar) {
            try {
                Vehiculo p = new Vehiculo(codigoR(), marcaR(), modeloR(), placaR(), transmisionR(),
                        combustibleR(), asientosR(), categoriaR(), costoR(), estadoR(), imagenR());
                String respuesta = listaVehi.adicionar(p);
                listaVehi.grabar();
                JOptionPane.showMessageDialog(null, respuesta);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(null, "Error al guardar: " + e.toString());
            }
            limpiarR();
        } else {
            JOptionPane.showMessageDialog(null, "Le falto rellenar un campos o ingreso un dato errómeo.");
        }

    }

    private int codigoR() {
        return Integer.parseInt(txtCodigoR.getText());
    }

    private String marcaR() {
        return txtMarcaR.getText();
    }

    private String modeloR() {
        return txtModeloR.getText();
    }

    private String placaR() {
        return txtPlacaR.getText().toUpperCase();
    }

    private String transmisionR() {
        return cboTransmiR.getSelectedItem().toString();
    }

    private String combustibleR() {
        return cboCombusR.getSelectedItem().toString();
    }

    private int asientosR() {
        return Integer.parseInt(spiAsientR.getValue().toString());
    }

    private String categoriaR() {
        return cboCategoriaR.getSelectedItem().toString();
    }

    private double costoR() {
        return Double.parseDouble(txtCostoR.getText());
    }

    private String estadoR() {
        return cboEstadoR.getSelectedItem().toString();
    }

    private String imagenR() {
        return archivoR.toString();
    }

    /**
     * ************** LIMPIAR *************
     */
    private void limpiarR() {
        txtCodigoR.setText("");
        txtMarcaR.setText("");
        txtModeloR.setText("");
        txtPlacaR.setText("");
        cboTransmiR.setSelectedIndex(0);
        cboCombusR.setSelectedIndex(0);
        spiAsientR.setValue(0);
        cboCategoriaR.setSelectedIndex(0);
        txtCostoR.setText("");
        cboEstadoR.setSelectedIndex(0);
        /**/
        lblVehiR.setIcon(escalarImg(archivoDef, imagenVehiR, 300, 200));
        txtCodigoR.requestFocus(); //Focus
    }

    private void limpiarM() {
        txtCodigoM.setText("");
        txtMarcaM.setText("");
        txtModeloM.setText("");
        txtPlacaM.setText("");
        cboTransmiM.setSelectedIndex(0);
        cboCombusM.setSelectedIndex(0);
        spiAsientM.setValue(0);
        cboCategoriaM.setSelectedIndex(0);
        txtCostoM.setText("");
        cboEstadoM.setSelectedIndex(0);
        /**/
        lblVehiM.setIcon(escalarImg(archivoDef, imagenVehiM, 300, 200));
        txtCodigoM.requestFocus(); //Focus
    }

    private void listar() {
        //limpiarR la tabla
        int filas = tblListaVehi.getRowCount();
        for (int i = 0; i < filas; i++) {
            modelo.removeRow(0);
        }

        String filtro = txtFilMarca.getText();
        if (filtro.trim().equals("")) {
            //agregar la lista a la tabla
            if (listaVehi.totalVehi() > 0) {
                for (int i = 0; i < listaVehi.totalVehi(); i++) {
                    modelo.addRow(new Object[]{
                        listaVehi.obtener(i).getCodigo(),
                        listaVehi.obtener(i).getMarca(),
                        listaVehi.obtener(i).getModelo(),
                        listaVehi.obtener(i).getPlaca(),
                        listaVehi.obtener(i).getTransmision(),
                        listaVehi.obtener(i).getCombustible(),
                        listaVehi.obtener(i).getAsientos(),
                        listaVehi.obtener(i).getCategoria(),
                        listaVehi.obtener(i).getCosto(),
                        listaVehi.obtener(i).getEstado()});
                }
            } else {
                JOptionPane.showMessageDialog(null, "No hay vehículos para mostrar");
            }
        } else {
            if (listaVehi.obtMarca(filtro).size() > 0) {
                for (int i = 0; i < listaVehi.obtMarca(filtro).size(); i++) {
                    modelo.addRow(new Object[]{
                        listaVehi.obtMarca(filtro).get(i).getCodigo(),
                        listaVehi.obtMarca(filtro).get(i).getMarca(),
                        listaVehi.obtMarca(filtro).get(i).getModelo(),
                        listaVehi.obtMarca(filtro).get(i).getPlaca(),
                        listaVehi.obtMarca(filtro).get(i).getTransmision(),
                        listaVehi.obtMarca(filtro).get(i).getCombustible(),
                        listaVehi.obtMarca(filtro).get(i).getAsientos(),
                        listaVehi.obtMarca(filtro).get(i).getCategoria(),
                        listaVehi.obtMarca(filtro).get(i).getCosto(),
                        listaVehi.obtMarca(filtro).get(i).getEstado()});
                }
            } else {
                JOptionPane.showMessageDialog(null, "No hay vehículos para mostrar");
            }
        }
    }

    /**
     * ************** MODIFICAR *************
     */
    private void buscar() {
        try {
            Vehiculo p = null;
            p = listaVehi.buscar(codigoM());
            mostrarVehiculo(p);
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Los códigos son de tipo numérico.");
        } catch (NullPointerException e) {
            JOptionPane.showMessageDialog(null, "El código ingresado no existe");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error en buscar: " + e);
        }
    }

    private void mostrarVehiculo(Vehiculo p) {
        txtMarcaM.setText(p.getMarca());
        txtModeloM.setText(p.getModelo());
        txtPlacaM.setText(p.getPlaca().toUpperCase());
        cboTransmiM.setSelectedItem(p.getTransmision());
        cboCombusM.setSelectedItem(p.getCombustible());
        spiAsientM.setValue(p.getAsientos());
        cboCategoriaM.setSelectedItem(p.getCategoria());
        txtCostoM.setText(String.valueOf(p.getCosto()));
        cboEstadoM.setSelectedItem(p.getEstado());

        /* Traer imagen */
        archivoM = new File(p.getRutaImg());
        byte[] imagen = null;
        lblVehiM.setIcon(escalarImg(archivoM, imagen, 300, 200));

    }

    private void actualizar() {
        try {
            Vehiculo p = new Vehiculo(codigoM(), marcaM(), modeloM(), placaM(), transmisionM(),
                    combustibleM(), asientosM(), categoriaM(), costoM(), estadoM(), imagenM());
            listaVehi.actualizar(p);
            listaVehi.grabar();
            JOptionPane.showMessageDialog(null, "Actualización realizada con éxito");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Error al actualizar: " + e.toString());
        }
    }

    private int codigoM() {
        return Integer.parseInt(txtCodigoM.getText());
    }

    private String marcaM() {
        return txtMarcaM.getText();
    }

    private String modeloM() {
        return txtModeloM.getText();
    }

    private String placaM() {
        return txtPlacaM.getText().toUpperCase();
    }

    private String transmisionM() {
        return cboTransmiM.getSelectedItem().toString();
    }

    private String combustibleM() {
        return cboCombusM.getSelectedItem().toString();
    }

    private int asientosM() {
        return Integer.parseInt(spiAsientM.getValue().toString());
    }

    private String categoriaM() {
        return cboCategoriaM.getSelectedItem().toString();
    }

    private double costoM() {
        return Double.parseDouble(txtCostoM.getText());
    }

    private String estadoM() {
        return cboEstadoM.getSelectedItem().toString();
    }

    private String imagenM() {
        return archivoM.toString();
    }

    /**
     * ************** ELIMINAR *************
     */
    private void eliminar() {
        try {
            Vehiculo v = null;
            v = listaVehi.buscar(codigoE());
            int elecc = JOptionPane.showConfirmDialog(null, "Está seguro de eliminar el vehículo " + v.getMarca() + " " + v.getModelo());
            if (elecc == 0) {
                listaVehi.eliminar(v);
                listaVehi.grabar();
                JOptionPane.showMessageDialog(null, "Eliminación realizada con éxito");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "El código no existe");
        }
    }

    private int codigoE() {
        return Integer.parseInt(txtCodigoE.getText());
    }

    /**
     * ************ MANEJAR IMAGEN ************
     */
    public byte[] abrirArchivo(File archivo) {
        byte[] imagen = new byte[1024 * 1000];
        try {
            entrada = new FileInputStream(archivo);
            entrada.read(imagen);
        } catch (FileNotFoundException e) {
            JOptionPane.showMessageDialog(null, "La imagen no ha sido encontrada");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "NANI?: " + e.toString());
        }
        return imagen;
    }

    private void subirImagen() {
        try {
            if (elegir.showDialog(null, null) == JFileChooser.APPROVE_OPTION) {
                archivoR = elegir.getSelectedFile();
                if (archivoR.canRead()) {
                    if (archivoR.getName().endsWith("jpg") || archivoR.getName().endsWith("png") || archivoR.getName().endsWith("jpeg")) {
                        lblVehiR.setIcon(escalarImg(archivoR, imagenVehiR, 300, 200));
                        this.repaint();
                    } else {
                        JOptionPane.showMessageDialog(null, "Archivo no compatible");
                    }
                }
            } else {
                if (archivoR == null) {
                    archivoR = archivoDef;
                }
                if (archivoR.canRead()) {
                    if (archivoR.getName().endsWith("jpg") || archivoR.getName().endsWith("png") || archivoR.getName().endsWith("jpeg")) {
                        lblVehiR.setIcon(escalarImg(archivoR, imagenVehiR, 300, 200));
                        this.repaint();
                    } else {
                        JOptionPane.showMessageDialog(null, "Archivo no compatible");
                    }
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    private void cambiarImagen() {
        try {
            if (elegir.showDialog(null, null) == JFileChooser.APPROVE_OPTION) {
                archivoM = elegir.getSelectedFile();
                if (archivoM.canRead()) {
                    if (archivoM.getName().endsWith("jpg") || archivoM.getName().endsWith("png") || archivoM.getName().endsWith("jpeg")) {
                        lblVehiM.setIcon(escalarImg(archivoM, imagenVehiM, 300, 200));
                        this.repaint();
                    } else {
                        JOptionPane.showMessageDialog(null, "Archivo no compatible");
                    }
                }
            } else {
                if (archivoM == null) {
                    archivoM = archivoDef;
                }
                if (archivoM.canRead()) {
                    if (archivoM.getName().endsWith("jpg") || archivoM.getName().endsWith("png") || archivoM.getName().endsWith("jpeg")) {
                        lblVehiM.setIcon(escalarImg(archivoM, imagenVehiM, 300, 200));
                        this.repaint();
                    } else {
                        JOptionPane.showMessageDialog(null, "Archivo no compatible");
                    }
                }
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
    }

    public void verVehiculo() {
        ImgTbl mandar = new ImgTbl();
        int fila = tblListaVehi.getSelectedRow();
        if (fila >= 0) {

            int codigo = (int) modelo.getValueAt(fila, 0);
            Vehiculo v = null;
            v = listaVehi.buscar(codigo);
            File ruta = new File(v.getRutaImg());
            mandar.setVisible(true);
            byte[] imagen = null;
            ImgTbl.lblImgVehi.setIcon(escalarImg(ruta, imagen, 600, 400));
            this.repaint();
        } else {
            JOptionPane.showMessageDialog(null, "Selecciona una fila.");
        }
    }

    private Icon escalarImg(File ruta, byte[] img, int anc, int alt) {
        img = abrirArchivo(ruta);
        int ancho = anc;
        int alto = alt;
        Icon icoImg = new ImageIcon(new ImageIcon(img).getImage().getScaledInstance(ancho, alto, Image.SCALE_DEFAULT));
        return icoImg;
    }

    private void enviarVehiculo() {
        int fila = tblListaVehi.getSelectedRow();
        if (fila >= 0) {
            int pos = (int)tblListaVehi.getValueAt(fila, 0);
            Vehiculo v = listaVehi.obtener(pos);
            JFPrincipal.lblNombreVehi.setText(v.getMarca() + " " + v.getModelo());
            JFPrincipal.lblCostoVeh.setText(String.valueOf(v.getCosto()));
            JFPrincipal.veh = v;
            this.dispose();
        } else {
            JOptionPane.showMessageDialog(null, "Selecciona una fila de la Tabla para enviar los datos");
        }
    }

}
